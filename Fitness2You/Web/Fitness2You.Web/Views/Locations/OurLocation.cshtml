@model LocationInputViewModel
@{
    this.ViewData["Title"] = "Location";
}

<head>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 500px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>
</head>
<body>
    <h3>My Google Maps Location</h3>
    @if (this.User.IsInRole("Admin"))
    {
        <main class="site-content admin">
            <section class="site-wrapper">
                <section class="main">
                    <section class="contacts">
                        <form id="location" class="contacts-form" action="OurLocation" method="post">
                            <div asp-validation-summary="ModelOnly"></div>
                            <label asp-for="Latitude"></label>
                            <section class="form-label">
                                <input type="text" asp-for="@Model.Latitude" placeholder="Latitude...">
                                <i class="fas fa-arrows-alt-h"></i>
                                <span asp-validation-for="@Model.Latitude" class="text-danger"></span>
                            </section>
                            <label asp-for="Longitude"></label>
                            <section class="form-label">
                                <input type="text" asp-for="@Model.Longitude" placeholder="Longitude...">
                                <i class="fas fa-arrows-alt-v"></i>
                                <span asp-validation-for="@Model.Longitude" class="text-danger"></span>
                            </section>
                            <section class="form-label">
                                <input type="submit" asp-route-id="@Model.Id" value="Send now!">
                            </section>
                        </form>
                    </section>
                </section>
            </section>
        </main>
    }
    <!--The div element for the map -->
    <div id="map"></div>
    <script>
        // Initialize and add the map
        function initMap() {
            // The location of Uluru
            var uluru = { lat: @Model.Latitude, lng: @Model.Longitude };
            // The map, centered at Uluru
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 14, center: uluru });
            // The marker, positioned at Uluru
            var marker = new google.maps.Marker({ position: uluru, map: map });
        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDf75hCWRd5sSooJkFcQm9yXJJ9SSBYefA&callback=initMap">
    </script>
</body>
